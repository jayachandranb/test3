---
swagger: "2.0"
info:
  description: "A sample openAPI specification that uses a simple user group system\
    \ as an example to generate a skelton API"
  version: "1.0.0"
  title: "Payments API Template"
host: "localhost"
basePath: "/v1"
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /users:
    get:
      tags:
      - "Users"
      summary: "findUsers"
      description: "Returns all users from the system that the user has access to"
      operationId: "UsersGet"
      produces:
      - "application/json"
      parameters:
      - name: "tags"
        in: "query"
        description: "tags to filter by"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-exportParamName: "Tags"
      - name: "limit"
        in: "query"
        description: "maximum number of results to return"
        required: false
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int32"
        x-exportParamName: "Limit"
      responses:
        200:
          description: "user response"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/User"
          examples: {}
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security: []
      x-unitTests:
      - request:
          method: "GET"
          uri: "/users"
        expectedResponse:
          x-allowExtraHeaders: true
          x-bodyMatchMode: "NONE"
          x-arrayOrderedMatching: false
          x-arrayCheckCount: false
          x-matchResponseSchema: true
          headers: {}
        x-testShouldPass: true
        x-testEnabled: true
        x-testName: "Test findUsers"
        x-testDescription: "Returns all users from the system"
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    post:
      tags:
      - "Users"
      summary: "addUser"
      description: "Creates a new user in the store.  Duplicates are allowed"
      operationId: "UsersPost"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User to add to the store"
        required: true
        schema:
          $ref: "#/definitions/NewUser"
        x-exportParamName: "Body"
      responses:
        200:
          description: "user response"
          schema:
            $ref: "#/definitions/User"
          examples: {}
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
  /users/{id}:
    get:
      tags:
      - "Users"
      summary: "find user by id"
      description: "Returns a user based on a single ID, if the user does not have\
        \ access to the user"
      operationId: "UsersByIdGet"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of user to fetch"
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int64"
        x-exportParamName: "Id"
      responses:
        200:
          description: "user response"
          schema:
            $ref: "#/definitions/User"
          examples: {}
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
    delete:
      tags:
      - "Users"
      summary: "deleteUser"
      description: "deletes a single user based on the ID supplied"
      operationId: "UsersByIdDelete"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "ID of user to delete"
        required: true
        type: "integer"
        exclusiveMaximum: false
        exclusiveMinimum: false
        format: "int64"
        x-exportParamName: "Id"
      responses:
        204:
          description: "user deleted"
        default:
          description: "unexpected error"
          schema:
            $ref: "#/definitions/Error"
      security: []
      x-unitTests: []
      x-operation-settings:
        CollectParameters: false
        AllowDynamicQueryParameters: false
        AllowDynamicFormParameters: false
        IsMultiContentStreaming: false
definitions:
  User:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      name:
        type: "string"
        description: ""
      id:
        type: "integer"
        format: "int64"
        description: ""
      tag:
        type: "string"
        description: ""
    title: "User"
  Error:
    type: "object"
    required:
    - "code"
    - "message"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: ""
      message:
        type: "string"
        description: ""
    title: "Error"
  NewUser:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: ""
      tag:
        type: "string"
        description: ""
    title: "NewUser"
    example:
      name: "name"
      tag: "tag"
